############################################## Theme ##############################################

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

ZSH=$HOME/.oh-my-zsh
ZSH_THEME="powerlevel10k/powerlevel10k"

############################################# Plugins #############################################

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/custom/plugins/)
plugins=(
  zsh-syntax-highlighting
  zsh-autosuggestions
)

######################################### General Settings #########################################

# The following needs to run before oh-my-zsh
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

source $ZSH/oh-my-zsh.sh

# Making zsh parse calls correctly
# More info: https://github.com/thoughtbot/dotfiles/pull/194/files
unsetopt nomatch

# macOS Sierra has removed the ability to remember your SSH keys across reboot in order to conform
# to mainstream OpenSSH behavior. More info: http://superuser.com/q/1127067/667812
# The following line solves this problem
ssh-add -A &> /dev/null

# Defang naughty commands; the entire history entry is in $1
# http://unix.stackexchange.com/a/312539
function zshaddhistory() {
  if [[ $1 =~ "^ " ]]; then
    return 0
  elif [[ $1 =~ "cp\ *|mv\ *|rm\ *|cat\ *\>|pv\ *|dd\ *" ]]; then
    1="# $1"
  fi
  # write to usual history location
  print -sr -- ${1%%$'\n'}
  # do not save the history line. if you have a chain of zshaddhistory
  # hook functions, this may be more complicated to manage, depending
  # on what those other hooks do (man zshall | less -p zshaddhistory)
  return 1
}

############################################# Export #############################################

HISTSIZE=9999999 # default is 50000
SAVEHIST=$HISTSIZE

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=240'

case $OSTYPE in
  linux-gnu)
    export EDITOR='vim -f'
    export GEM_EDITOR='vim -f'
    ;;
  darwin*)
    export EDITOR='code --wait' # mvim -f
    export GEM_EDITOR='code --wait' # mvim -f
    ;;
esac

case $OSTYPE in
  darwin*)
    if [ $(uname -m) = "x86_64" ]; then # Intel Macs
      export PATH="/usr/local/bin:/usr/local/sbin:$PATH" # Homebrew
    elif [ $(uname -m) = "arm64" ]; then # Apple Silicon
      export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH" # Homebrew
    fi

    # asdf (multiple runtime versions manager) - https://asdf-vm.com/
    # The following works on both Apple Silicon and Intel Macs
    . $(brew --prefix asdf)/libexec/asdf.sh
    . $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash

    export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
    export PATH="$PATH:$(yarn global bin)" # Yarn global modules
    ;;
esac

# PostgreSQL
export PGHOST=localhost

case $OSTYPE in
  linux-gnu)
    export LANGUAGE=en_US.UTF-8
    export LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    ;;
  darwin*)
    export CLICOLOR='auto'
    ;;
esac

# GPG
export GPG_TTY=$(tty)

# fzf (key bindings and fuzzy completion) - https://github.com/junegunn/fzf
eval "$(fzf --zsh)"

######################################## Personal configs ########################################

if [ -d $HOME/projects/.personal_configs ]; then
  for file in $HOME/projects/.personal_configs/*; do source $file; done
fi

########################################### bin-files ############################################

if [ -d $HOME/.dotfiles/bin ]; then
  export PATH=$HOME/.dotfiles/bin:$PATH
fi

############################################ Aliases #############################################

# Git
alias g='git status'
alias gc='git commit --no-edit'
alias gl='git log --graph --pretty=format:'\''%Cred%h%Creset -%C(yellow)%d%Creset %Cblue%an%Creset - %s %Cgreen(%cr)%Creset'\'' --abbrev-commit --date=relative'
alias gls='git log --graph --pretty=format:'\''%s'\'' --abbrev-commit --date=relative --author="`git config --get user.name`"'
alias gd='git --no-pager diff'
alias gdc='git --no-pager diff --cached'
alias gds='git --no-pager diff HEAD\^ HEAD'
alias gm='git merge --no-edit'
alias gmu='git fetch upstream && git merge upstream/main'
alias ga='git add'
alias gaa='git add --all'
alias gr='git rm'
alias gp='git pull origin $(git branch --show-current) --rebase --prune'
alias gb='git branch'
alias gba='git branch -a'
alias gbd='git branch -d'
alias gbD='git branch -D'
alias push='git push'
alias fpush='git push --force-with-lease'
alias ch=".git/hooks/pre-commit"
alias ph=".git/hooks/pre-push"

# Ruby / Rails
alias be='bundle exec'
# Rails server: see `./bin/rs` file
alias rc='bin/rails c'
alias rg='bin/rails g'

alias rspec='bundle exec rspec'
alias rubocop='bundle exec rubocop'

case $OSTYPE in
  darwin*)
    if [ $(uname -m) = "arm64" ]; then # Apple Silicon
      alias a="arch -x86_64"
    fi

    alias flushdns='sudo killall -HUP mDNSResponder' # https://support.apple.com/en-au/HT202516
    alias simulator="open -a Simulator.app"
    ;;
esac

colorflag="-G"
alias ls="command ls ${colorflag}"
alias l="ls -lhF ${colorflag}" # All files, in long format
alias ll="l"
alias la="ls -laF ${colorflag}" # All files inc dotfiles, in long format

# Sort `ls` output by modification time, displayed in "long iso" format
# https://www.cyberciti.biz/faq/ls-command-sort-the-output-by-last-modified-time-date/
# http://giantdorks.org/alain/make-ls-output-date-in-long-iso-format-instead-of-short-month/
case $OSTYPE in
  linux-gnu)
    alias lsm='ls -l --time-style=long-iso'
    ;;
  darwin*)
    if [ $(uname -m) = "x86_64" ]; then # Intel Macs
      alias lsm='/usr/local/bin/gls -l --time-style=long-iso'
    elif [ $(uname -m) = "arm64" ]; then # Apple Silicon
      alias lsm='/opt/homebrew/bin/gls -l --time-style=long-iso'
    fi
    ;;
esac

alias ag='ag --hidden --ignore-dir .git --ignore-dir node_modules --ignore-dir vendor --ignore=*.min.js'
# ag --list-file-types
alias agr='ag --ruby'
alias agj='ag --js --ts'
alias agc='ag --sass --css'
alias agh='ag --html'
alias agm='ag --markdown'
alias brewski='brew update && brew upgrade && brew cleanup; brew doctor'

if [ "${OSTYPE//[0-9.]/}" == "darwin" ]; then
  m() { mvim -p ${1-.} }
fi

alias sshkey='cat $HOME/.ssh/id_rsa.pub | pbcopy && echo "Your public SSH Key has been copied to the clipboard"'
alias bne='curl wttr.in/brisbane'

alias myip="ipconfig getifaddr $(route -n get default|awk '/interface/ { print $2 }')"

########################################### Functions ############################################

case $OSTYPE in
  darwin*) # macOS
    # Change directory in your terminal window to the path of the front Finder window
    # From https://superuser.com/a/1044651/667812
    # NOTE: this function cannot be extracted to its own bin-file because while a script can change
    # directories within its own execution context, these changes will not persist after it finishes
    fcd() {
      target=$(osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)')
      [ -n "$target" ] && cd "$target"
      pwd
    }
    ;;
esac

############################################## PS1 ###############################################

precmd() {
  export PROMPT='%{$fg_no_bold[green]%}%1~ $(git_prompt_info)%{$reset_color%}Â» '
  export RPROMPT=''
  return;
}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh
[[ ! -f $HOME/.p10k.zsh ]] || source $HOME/.p10k.zsh
